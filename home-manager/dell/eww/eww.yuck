(defpoll spercent :interval "2s" "wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/Volume: //;s/0.00/0/;s/0\\.//;s/\\.//;s/$/%/;s/.* //;s/]%/]/'")
(defpoll bpercent :interval "10s" "cat /sys/class/power_supply/BAT0/current")
(defpoll IP :interval "20s" `ip addr show \$(nmcli c | head -n2 | tail -n +2 | awk -F'  +' '{print $4}') | grep -oP '(?<=inet\\s)\\d+(\\.\\d+){3}'`)
(defpoll WIFI_QUALITY :interval "10s" `nmcli dev wifi | grep "*" | awk -F'  +' '{print $7}'`)
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(deflisten ctitle :initial "..." "sh ~/.config/eww/scripts/get-window-title")

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%"
            :y "5px"
            :width "99.3%"
            :height "30px"
            :anchor "top center")
  :stacking "bottom"
  :exclusive true
  :focusable false
  :namespace "bar"
(fullbar))

(defwidget fullbar []
  (box :orientation "h"
    :class "container"
    (leftbar)
    (title)
    (rightbar)))

(defwidget leftbar []
 (box :orientation "h"
  :halign "start"
  :class "leftbar"
  :space-evenly false
  :spacing 20
  (launcher)
  (workspaces)))

(defwidget rightbar []
  (box :orientation "h"
    :halign "end"
    :class "rightbar"
    :space-evenly false
    :spacing 20
    (network)
    (volume)
    (clock)))

(defwidget launcher []
  (box :orientation "h"
    :class "launcher"
  (button :onclick "wofi --show drun -I &"
  " ")))

(defwidget title []
  (box :orientation "h"
    :class "title"
  "${ctitle}"))

(defwidget volume []
  (box :orientation "h"
    :class "volume"
    :spacing 10
    :space-evenly false
    (box :spacing 10 :space-evenly false "" {spercent})
    (box :spacing 5 :space-evenly false "󰁹" {bpercent})))

(defwidget clock []
  (box :orientation "h"
    :class "clock"
    :space-evenly false
    :spacing 10
    (label :class "date" :text {formattime(EWW_TIME, "%a, %d %b")})
    (label :class "time" :text {formattime(EWW_TIME, "%I:%M %p")})))

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true :spacing 5
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )
